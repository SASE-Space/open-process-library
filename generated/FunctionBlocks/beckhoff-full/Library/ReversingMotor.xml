<pou name="ReversingMotor" pouType="functionBlock">
    <interface>
        <inOutVars>
            <variable name="MTPBase"><type><derived name="MonBinDrv" /></type></variable>
        </inOutVars>
        <inputVars>
            <variable name="stop"><type><BOOL /></type></variable>
            <variable name="forward"><type><BOOL /></type></variable>
            <variable name="reverse"><type><BOOL /></type></variable>
            <variable name="forwardFeedback"><type><BOOL /></type></variable>
            <variable name="reverseFeedback"><type><BOOL /></type></variable>
            <variable name="hasFwdFeedback"><type><BOOL /></type></variable>
            <variable name="hasRevFeedback"><type><BOOL /></type></variable>
            <variable name="enableForward"><type><BOOL /></type></variable>
            <variable name="enableReverse"><type><BOOL /></type></variable>
            <variable name="driveTrip"><type><BOOL /></type></variable>
            <variable name="safeHold"><type><BOOL /></type></variable>
            <variable name="monitor"><type><BOOL /></type></variable>
            <variable name="staticTimeout"><type><REAL /></type></variable>
            <variable name="dynamicTimeout"><type><REAL /></type></variable>
            <variable name="simulate"><type><BOOL /></type></variable>
            <variable name="simulateDelay"><type><REAL /></type></variable>
            <variable name="interlockIn"><type><BOOL /></type></variable>
            <variable name="permitIn"><type><BOOL /></type></variable>
            <variable name="protectIn"><type><BOOL /></type></variable>
            <variable name="reset"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="fwdCommand"><type><BOOL /></type></variable>
            <variable name="revCommand"><type><BOOL /></type></variable>
            <variable name="forwardActive"><type><BOOL /></type></variable>
            <variable name="reverseActive"><type><BOOL /></type></variable>
            <variable name="remote"><type><BOOL /></type></variable>
            <variable name="operator"><type><BOOL /></type></variable>
            <variable name="automatic"><type><BOOL /></type></variable>
            <variable name="offline"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="fwdFbkSimulated"><type><BOOL /></type></variable>
            <variable name="revFbkSimulated"><type><BOOL /></type></variable>
            <variable name="DelayTimer1"><type><derived name="TON" /></type></variable>
            <variable name="DelayTimer2"><type><derived name="TON" /></type></variable><!-- Temporary variables for MTP base interface access -->
            <variable name="StateChannel"><type><BOOL /></type></variable>
            <variable name="StateOpAct"><type><BOOL /></type></variable>
            <variable name="StateAutAct"><type><BOOL /></type></variable>
            <variable name="StateOffAct"><type><BOOL /></type></variable>
            <variable name="PermEn"><type><BOOL /></type></variable>
            <variable name="Permit"><type><BOOL /></type></variable>
            <variable name="IntlEn"><type><BOOL /></type></variable>
            <variable name="Interlock"><type><BOOL /></type></variable>
            <variable name="ProtEn"><type><BOOL /></type></variable>
            <variable name="Protect"><type><BOOL /></type></variable>
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="OSLevel"><type><BYTE /></type></variable>
            <variable name="SafePos"><type><BOOL /></type></variable>
            <variable name="FwdEn"><type><BOOL /></type></variable>
            <variable name="RevEn"><type><BOOL /></type></variable>
            <variable name="StopAut"><type><BOOL /></type></variable>
            <variable name="FwdAut"><type><BOOL /></type></variable>
            <variable name="RevAut"><type><BOOL /></type></variable>
            <variable name="FwdCtrl"><type><BOOL /></type></variable>
            <variable name="RevCtrl"><type><BOOL /></type></variable>
            <variable name="RevFbkCalc"><type><BOOL /></type></variable>
            <variable name="RevFbk"><type><BOOL /></type></variable>
            <variable name="FwdFbkCalc"><type><BOOL /></type></variable>
            <variable name="FwdFbk"><type><BOOL /></type></variable>
            <variable name="Trip"><type><BOOL /></type></variable>
            <variable name="ResetAut"><type><BOOL /></type></variable>
            <variable name="MonSafePos"><type><BOOL /></type></variable>
            <variable name="MonStatTi"><type><REAL /></type></variable>
            <variable name="MonDynTi"><type><REAL /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
                <![CDATA[
// Copy MTP base variables to local temporaries (READ access)
StateChannel := MTPBase.StateChannel;
StateOpAct := MTPBase.StateOpAct;
StateAutAct := MTPBase.StateAutAct;
StateOffAct := MTPBase.StateOffAct;
FwdCtrl := MTPBase.FwdCtrl;
RevCtrl := MTPBase.RevCtrl;


WQC := 16#FF;
OSLevel := 16#00;
remote := StateChannel;
operator := StateOpAct;
automatic := StateAutAct;
offline := StateOffAct;
PermEn := True;
IntlEn := True;
ProtEn := True;
Permit := permitIn;
Interlock := interlockIn;
IF protectIn THEN
    Protect := TRUE;
END_IF;
SafePos := false;
FwdEn := enableForward;
RevEn := enableReverse;
StopAut := stop;
FwdAut := forward;
RevAut := reverse;
fwdCommand := FwdCtrl;
revCommand := RevCtrl;
FwdFbkCalc := simulate OR NOT hasFwdFeedback;
RevFbkCalc := simulate OR NOT hasRevFeedback;
DelayTimer1(IN:= (simulate OR NOT hasFwdFeedback) AND fwdCommand, PT:= REAL_TO_TIME(simulateDelay * 1000));
fwdFbkSimulated := DelayTimer1.Q;
DelayTimer2(IN:= (simulate OR NOT hasRevFeedback) AND NOT revCommand, PT:= REAL_TO_TIME(simulateDelay * 1000));
revFbkSimulated := DelayTimer2.Q;
FwdFbk := forwardFeedback OR fwdFbkSimulated;
RevFbk := reverseFeedback OR revFbkSimulated;
Trip := driveTrip;
ResetAut := reset;
MonSafePos := safeHold;
MonStatTi := staticTimeout;
MonDynTi := dynamicTimeout;
reset := False;

// Copy local temporaries back to MTP base variables (WRITE access)
MTPBase.PermEn := PermEn;
MTPBase.Permit := Permit;
MTPBase.IntlEn := IntlEn;
MTPBase.Interlock := Interlock;
MTPBase.ProtEn := ProtEn;
MTPBase.Protect := Protect;
MTPBase.WQC := WQC;
MTPBase.OSLevel := OSLevel;
MTPBase.SafePos := SafePos;
MTPBase.FwdEn := FwdEn;
MTPBase.RevEn := RevEn;
MTPBase.StopAut := StopAut;
MTPBase.FwdAut := FwdAut;
MTPBase.RevAut := RevAut;
MTPBase.RevFbkCalc := RevFbkCalc;
MTPBase.RevFbk := RevFbk;
MTPBase.FwdFbkCalc := FwdFbkCalc;
MTPBase.FwdFbk := FwdFbk;
MTPBase.Trip := Trip;
MTPBase.ResetAut := ResetAut;
MTPBase.MonSafePos := MonSafePos;
MTPBase.MonStatTi := MonStatTi;
MTPBase.MonDynTi := MonDynTi;
                ]]>
            </xhtml>
        </ST>
    </body>
</pou>