<pou name="AnalogMeasurement" pouType="functionBlock">
    <interface>
        <inOutVars>
            <variable name="MTPBase"><type><derived name="FB_MTP_AnaMon" /></type></variable>
        </inOutVars>
        <inputVars>
            <variable name="id"><type><INT /></type></variable>
            <variable name="rawValue"><type><WORD /></type></variable>
            <variable name="valueUnit"><type><INT /></type></variable>
            <variable name="scaleMin"><type><REAL /></type></variable>
            <variable name="scaleMax"><type><REAL /></type></variable>
            <variable name="alarmHighEn"><type><BOOL /></type></variable>
            <variable name="warningHighEn"><type><BOOL /></type></variable>
            <variable name="toleranceHighEn"><type><BOOL /></type></variable>
            <variable name="toleranceLowEn"><type><BOOL /></type></variable>
            <variable name="warningLowEn"><type><BOOL /></type></variable>
            <variable name="alarmLowEn"><type><BOOL /></type></variable>
            <variable name="deadband"><type><REAL /></type></variable>
            <variable name="externalFault"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="vOut"><type><REAL /></type></variable>
            <variable name="error"><type><BOOL /></type></variable>
            <variable name="alarmHighStatus"><type><BOOL /></type></variable>
            <variable name="warningHighStatus"><type><BOOL /></type></variable>
            <variable name="toleranceHighStatus"><type><BOOL /></type></variable>
            <variable name="toleranceLowStatus"><type><BOOL /></type></variable>
            <variable name="warningLowStatus"><type><BOOL /></type></variable>
            <variable name="alarmLowStatus"><type><BOOL /></type></variable>
        </outputVars>
        <localVars><!-- Temporary variables for MTP base interface access -->
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="OSLevel"><type><BYTE /></type></variable>
            <variable name="V"><type><REAL /></type></variable>
            <variable name="VSclMin"><type><REAL /></type></variable>
            <variable name="VSclMax"><type><REAL /></type></variable>
            <variable name="VUnit"><type><INT /></type></variable>
            <variable name="VAHEn"><type><BOOL /></type></variable>
            <variable name="VWHEn"><type><BOOL /></type></variable>
            <variable name="VTHEn"><type><BOOL /></type></variable>
            <variable name="VTLEn"><type><BOOL /></type></variable>
            <variable name="VWLEn"><type><BOOL /></type></variable>
            <variable name="VALEn"><type><BOOL /></type></variable>
            <variable name="VAHLim"><type><REAL /></type></variable>
            <variable name="VWHLim"><type><REAL /></type></variable>
            <variable name="VTHLim"><type><REAL /></type></variable>
            <variable name="VTLLim"><type><REAL /></type></variable>
            <variable name="VWLLim"><type><REAL /></type></variable>
            <variable name="VALLim"><type><REAL /></type></variable>
            <!-- Helper variables for sync detection -->
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
                <![CDATA[

// sync variables with MTPBase
// - a variable on MTPBase that can be changed from the HMI
// - an input on the wrapper block
// how: store the variable from the MTPBase on a helper variable, and then compare each cycle if the operator has changed it
// if yes then copy it to the input on the wrapper block
// if not then copy the wrapper block input to the MTPBase variable

// copy from and to the MTPBase
// there is no need to execute the MTPBase block here because it gets executed as part of the auto-generated MTP code
    MTPBase.WQC := WQC;
    MTPBase.OSLevel := OSLevel;
    MTPBase.V := V;
    MTPBase.VSclMin := VSclMin;
    MTPBase.VSclMax := VSclMax;
    MTPBase.VUnit := VUnit;
    MTPBase.VAHEn := VAHEn;
    MTPBase.VWHEn := VWHEn;
    MTPBase.VTHEn := VTHEn;
    MTPBase.VTLEn := VTLEn;
    MTPBase.VWLEn := VWLEn;
    MTPBase.VALEn := VALEn;
    V := MTPBase.V;
    VSclMin := MTPBase.VSclMin;
    VSclMax := MTPBase.VSclMax;
    VAHLim := MTPBase.VAHLim;
    VWHLim := MTPBase.VWHLim;
    VTHLim := MTPBase.VTHLim;
    VTLLim := MTPBase.VTLLim;
    VWLLim := MTPBase.VWLLim;
    VALLim := MTPBase.VALLim;



// Functionality

WQC := 16#FF;
OSLevel := 16#00;
V := VSclMin + (WORD_TO_REAL(rawValue) / 27648.0) * (VSclMax - VSclMin);
vOut := V;
VSclMin := scaleMin;
VSclMax := scaleMax;
VUnit := valueUnit;
VAHEn := alarmHighEn;
VWHEn := warningHighEn;
VTHEn := toleranceHighEn;
VTLEn := toleranceLowEn;
VWLEn := warningLowEn;
VALEn := alarmLowEn;

                ]]>
            </xhtml>
        </ST>
    </body>
    <addData>
        <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_INIT" ObjectId="8568aabb-efd1-4e11-b093-9ebdb5b0ac2b">
                <interface>
                    <returnType><BOOL /></returnType>
                    <inputVars>
                        <variable name="bInitRetains">
                            <type><BOOL /></type>
                            <documentation><xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml></documentation>
                        </variable>
                        <variable name="bInCopyCode">
                            <type><BOOL /></type>
                            <documentation><xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change)   </xhtml></documentation>
                        </variable>
                    </inputVars>
                    <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
FB_Init is always available implicitly and it is used primarily for initialization.
                        </xhtml>
                    </documentation>
                </interface>
                <body>
                    <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
// assign default values on initialization
THIS^.scaleMin := 0;
THIS^.scaleMax := 100;
THIS^.alarmHighEn := True;
THIS^.warningHighEn := True;
THIS^.toleranceHighEn := True;
THIS^.toleranceLowEn := True;
THIS^.warningLowEn := True;
THIS^.alarmLowEn := True;


                        </xhtml>
                    </ST>
                </body>
            </Method>
        </data>
    </addData>
</pou>