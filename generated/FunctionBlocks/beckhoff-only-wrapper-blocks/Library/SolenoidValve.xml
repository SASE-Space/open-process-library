<pou name="SolenoidValve" pouType="functionBlock">
    <interface>
        <inOutVars>
            <variable name="MTPBase"><type><derived name="FB_MTP_MonBinVlv" /></type></variable>
        </inOutVars>
        <inputVars>
            <variable name="id"><type><INT /></type></variable>
            <variable name="open"><type><BOOL /></type></variable>
            <variable name="close"><type><BOOL /></type></variable>
            <variable name="outsideOpen"><type><BOOL /></type></variable>
            <variable name="outsideClose"><type><BOOL /></type></variable>
            <variable name="feedbackOpen"><type><BOOL /></type></variable>
            <variable name="feedbackClose"><type><BOOL /></type></variable>
            <variable name="hasFbOpen"><type><BOOL /></type></variable>
            <variable name="hasFbClose"><type><BOOL /></type></variable>
            <variable name="safeOpen"><type><BOOL /></type></variable>
            <variable name="safeHold"><type><BOOL /></type></variable>
            <variable name="monitor"><type><BOOL /></type></variable>
            <variable name="staticTimeout"><type><REAL /></type></variable>
            <variable name="dynamicTimeout"><type><REAL /></type></variable>
            <variable name="simulate"><type><BOOL /></type></variable>
            <variable name="simulateDelay"><type><REAL /></type></variable>
            <variable name="interlockIn"><type><BOOL /></type></variable>
            <variable name="permitIn"><type><BOOL /></type></variable>
            <variable name="protectIn"><type><BOOL /></type></variable>
            <variable name="reset"><type><BOOL /></type></variable>
            <variable name="externalFault"><type><BOOL /></type></variable>
            <variable name="surpressAlarms"><type><BOOL /></type></variable>
            <variable name="setAuto"><type><BOOL /></type></variable>
            <variable name="setManual"><type><BOOL /></type></variable>
            <variable name="setOutside"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="openCommand"><type><BOOL /></type></variable>
            <variable name="pulseOpen"><type><BOOL /></type></variable>
            <variable name="pulseClose"><type><BOOL /></type></variable>
            <variable name="remote"><type><BOOL /></type></variable>
            <variable name="operator"><type><BOOL /></type></variable>
            <variable name="automatic"><type><BOOL /></type></variable>
            <variable name="offline"><type><BOOL /></type></variable>
            <variable name="outside"><type><BOOL /></type></variable>
            <variable name="error"><type><BOOL /></type></variable>
            <variable name="opened"><type><BOOL /></type></variable>
            <variable name="closed"><type><BOOL /></type></variable>
            <variable name="forceActive"><type><BOOL /></type></variable>
            <variable name="surpressed"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="fbOpenSimulated"><type><BOOL /></type></variable>
            <variable name="fbCloseSimulated"><type><BOOL /></type></variable>
            <variable name="DelayTimer1"><type><derived name="TON" /></type></variable>
            <variable name="DelayTimer2"><type><derived name="TON" /></type></variable><!-- Temporary variables for MTP base interface access -->
            <variable name="StateChannel"><type><BOOL /></type></variable>
            <variable name="StateOpAct"><type><BOOL /></type></variable>
            <variable name="StateAutAct"><type><BOOL /></type></variable>
            <variable name="StateOffAct"><type><BOOL /></type></variable>
            <variable name="PermEn"><type><BOOL /></type></variable>
            <variable name="IntlEn"><type><BOOL /></type></variable>
            <variable name="ProtEn"><type><BOOL /></type></variable>
            <variable name="Permit"><type><BOOL /></type></variable>
            <variable name="Interlock"><type><BOOL /></type></variable>
            <variable name="Protect"><type><BOOL /></type></variable>
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="SafePos"><type><BOOL /></type></variable>
            <variable name="SafePosEn"><type><BOOL /></type></variable>
            <variable name="OpenAut"><type><BOOL /></type></variable>
            <variable name="CloseAut"><type><BOOL /></type></variable>
            <variable name="Ctrl"><type><BOOL /></type></variable>
            <variable name="OpenFbkCalc"><type><BOOL /></type></variable>
            <variable name="CloseFbkCalc"><type><BOOL /></type></variable>
            <variable name="OpenFbk"><type><BOOL /></type></variable>
            <variable name="CloseFbk"><type><BOOL /></type></variable>
            <variable name="MonSafePos"><type><BOOL /></type></variable>
            <variable name="MonStatTi"><type><REAL /></type></variable>
            <variable name="MonDynTi"><type><REAL /></type></variable>
            <variable name="ResetAut"><type><BOOL /></type></variable>
            <variable name="MonEn"><type><BOOL /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
                <![CDATA[
// Copy MTP base variables to local temporaries (READ access)
StateChannel := MTPBase.StateChannel;
StateOpAct := MTPBase.StateOpAct;
StateAutAct := MTPBase.StateAutAct;
StateOffAct := MTPBase.StateOffAct;
Ctrl := MTPBase.Ctrl;
OpenFbk := MTPBase.OpenFbk;
CloseFbk := MTPBase.CloseFbk;

// Functionality

WQC := 16#FF;
remote := StateChannel;
operator := StateOpAct;
automatic := StateAutAct;
offline := StateOffAct;
PermEn := True;
IntlEn := True;
ProtEn := True;
Permit := permitIn;
Interlock := interlockIn;
IF protectIn THEN
    Protect := TRUE;
END_IF;
SafePos := safeOpen;
MonSafePos := safeOpen;
SafePosEn := safeHold;
OpenAut := open;
CloseAut := close;
OpenFbkCalc := simulate OR NOT feedbackOpen;
CloseFbkCalc := simulate OR NOT feedbackClose;
DelayTimer1(IN:= (simulate OR NOT hasFbOpen) AND Ctrl, PT:= REAL_TO_TIME(simulateDelay * 1000));
fbOpenSimulated := DelayTimer1.Q;
DelayTimer2(IN:= (simulate OR NOT hasFbClose) AND NOT Ctrl, PT:= REAL_TO_TIME(simulateDelay * 1000));
fbCloseSimulated := DelayTimer2.Q;
OpenFbk := feedbackOpen OR fbOpenSimulated;
CloseFbk := feedbackClose OR fbCloseSimulated;
opened := Ctrl AND OpenFbk;
closed := NOT Ctrl AND CloseFbk;
ResetAut := reset;
MonEn := monitor;
MonStatTi := staticTimeout;
MonDynTi := dynamicTimeout;
reset := False;

// Copy local temporaries back to MTP base variables (WRITE access)
MTPBase.PermEn := PermEn;
MTPBase.IntlEn := IntlEn;
MTPBase.ProtEn := ProtEn;
MTPBase.Permit := Permit;
MTPBase.Interlock := Interlock;
MTPBase.Protect := Protect;
MTPBase.WQC := WQC;
MTPBase.SafePos := SafePos;
MTPBase.SafePosEn := SafePosEn;
MTPBase.OpenAut := OpenAut;
MTPBase.CloseAut := CloseAut;
MTPBase.OpenFbkCalc := OpenFbkCalc;
MTPBase.CloseFbkCalc := CloseFbkCalc;
MTPBase.OpenFbk := OpenFbk;
MTPBase.CloseFbk := CloseFbk;
MTPBase.MonSafePos := MonSafePos;
MTPBase.MonStatTi := MonStatTi;
MTPBase.MonDynTi := MonDynTi;
MTPBase.ResetAut := ResetAut;
MTPBase.MonEn := MonEn;
                ]]>
            </xhtml>
        </ST>
    </body>
</pou>