<pou name="ReversingMotor" pouType="functionBlock">
    <interface>
        <inOutVars>
            <variable name="MTPBase"><type><derived name="FB_MTP_MonBinDrv" /></type></variable>
        </inOutVars>
        <inputVars>
            <variable name="id"><type><INT /></type></variable>
            <variable name="forward"><type><BOOL /></type></variable>
            <variable name="reverse"><type><BOOL /></type></variable>
            <variable name="forwardFeedback"><type><BOOL /></type></variable>
            <variable name="reverseFeedback"><type><BOOL /></type></variable>
            <variable name="hasFwdFeedback"><type><BOOL /></type></variable>
            <variable name="hasRevFeedback"><type><BOOL /></type></variable>
            <variable name="enableForward"><type><BOOL /></type></variable>
            <variable name="enableReverse"><type><BOOL /></type></variable>
            <variable name="driveTrip"><type><BOOL /></type></variable>
            <variable name="safeHold"><type><BOOL /></type></variable>
            <variable name="monitor"><type><BOOL /></type></variable>
            <variable name="staticTimeout"><type><REAL /></type></variable>
            <variable name="dynamicTimeout"><type><REAL /></type></variable>
            <variable name="simulate"><type><BOOL /></type></variable>
            <variable name="simulateDelay"><type><REAL /></type></variable>
            <variable name="interlockIn"><type><BOOL /></type></variable>
            <variable name="permitIn"><type><BOOL /></type></variable>
            <variable name="protectIn"><type><BOOL /></type></variable>
            <variable name="reset"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="fwdCommand"><type><BOOL /></type></variable>
            <variable name="revCommand"><type><BOOL /></type></variable>
            <variable name="forwardActive"><type><BOOL /></type></variable>
            <variable name="reverseActive"><type><BOOL /></type></variable>
            <variable name="remote"><type><BOOL /></type></variable>
            <variable name="operator"><type><BOOL /></type></variable>
            <variable name="automatic"><type><BOOL /></type></variable>
            <variable name="offline"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="fwdFbkSimulated"><type><BOOL /></type></variable>
            <variable name="revFbkSimulated"><type><BOOL /></type></variable>
            <variable name="DelayTimer1"><type><derived name="TON" /></type></variable>
            <variable name="DelayTimer2"><type><derived name="TON" /></type></variable><!-- Temporary variables for MTP base interface access -->
            <variable name="StateChannel"><type><BOOL /></type></variable>
            <variable name="StateOpAct"><type><BOOL /></type></variable>
            <variable name="StateAutAct"><type><BOOL /></type></variable>
            <variable name="StateOffAct"><type><BOOL /></type></variable>
            <variable name="PermEn"><type><BOOL /></type></variable>
            <variable name="Permit"><type><BOOL /></type></variable>
            <variable name="IntlEn"><type><BOOL /></type></variable>
            <variable name="Interlock"><type><BOOL /></type></variable>
            <variable name="ProtEn"><type><BOOL /></type></variable>
            <variable name="Protect"><type><BOOL /></type></variable>
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="OSLevel"><type><BYTE /></type></variable>
            <variable name="SafePos"><type><BOOL /></type></variable>
            <variable name="FwdEn"><type><BOOL /></type></variable>
            <variable name="RevEn"><type><BOOL /></type></variable>
            <variable name="StopAut"><type><BOOL /></type></variable>
            <variable name="FwdAut"><type><BOOL /></type></variable>
            <variable name="RevAut"><type><BOOL /></type></variable>
            <variable name="FwdCtrl"><type><BOOL /></type></variable>
            <variable name="RevCtrl"><type><BOOL /></type></variable>
            <variable name="RevFbkCalc"><type><BOOL /></type></variable>
            <variable name="RevFbk"><type><BOOL /></type></variable>
            <variable name="FwdFbkCalc"><type><BOOL /></type></variable>
            <variable name="FwdFbk"><type><BOOL /></type></variable>
            <variable name="Trip"><type><BOOL /></type></variable>
            <variable name="ResetAut"><type><BOOL /></type></variable>
            <variable name="MonSafePos"><type><BOOL /></type></variable>
            <variable name="MonStatTi"><type><REAL /></type></variable>
            <variable name="MonDynTi"><type><REAL /></type></variable>
            <!-- Helper variables for sync detection -->
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
                <![CDATA[

// sync variables with MTPBase
// - a variable on MTPBase that can be changed from the HMI
// - an input on the wrapper block
// how: store the variable from the MTPBase on a helper variable, and then compare each cycle if the operator has changed it
// if yes then copy it to the input on the wrapper block
// if not then copy the wrapper block input to the MTPBase variable

// copy from and to the MTPBase
// there is no need to execute the MTPBase block here because it gets executed as part of the auto-generated MTP code
    MTPBase.PermEn := PermEn;
    MTPBase.Permit := Permit;
    MTPBase.IntlEn := IntlEn;
    MTPBase.Interlock := Interlock;
    MTPBase.ProtEn := ProtEn;
    MTPBase.Protect := Protect;
    MTPBase.WQC := WQC;
    MTPBase.OSLevel := OSLevel;
    MTPBase.SafePos := SafePos;
    MTPBase.FwdEn := FwdEn;
    MTPBase.RevEn := RevEn;
    MTPBase.StopAut := StopAut;
    MTPBase.FwdAut := FwdAut;
    MTPBase.RevAut := RevAut;
    MTPBase.RevFbkCalc := RevFbkCalc;
    MTPBase.RevFbk := RevFbk;
    MTPBase.FwdFbkCalc := FwdFbkCalc;
    MTPBase.FwdFbk := FwdFbk;
    MTPBase.Trip := Trip;
    MTPBase.ResetAut := ResetAut;
    MTPBase.MonSafePos := MonSafePos;
    MTPBase.MonStatTi := MonStatTi;
    MTPBase.MonDynTi := MonDynTi;
    StateChannel := MTPBase.StateChannel;
    StateOpAct := MTPBase.StateOpAct;
    StateAutAct := MTPBase.StateAutAct;
    StateOffAct := MTPBase.StateOffAct;
    FwdCtrl := MTPBase.FwdCtrl;
    RevCtrl := MTPBase.RevCtrl;
    RevFbkCalc := MTPBase.RevFbkCalc;
    FwdFbkCalc := MTPBase.FwdFbkCalc;



// Functionality

WQC := 16#FF;
OSLevel := 16#00;
remote := StateChannel;
operator := StateOpAct;
automatic := StateAutAct;
offline := StateOffAct;
PermEn := True;
IntlEn := True;
ProtEn := True;
Permit := permitIn;
Interlock := NOT interlockIn;
Protect := NOT protectIn;
SafePos := false;
FwdEn := enableForward;
RevEn := enableReverse;
StopAut := NOT forward AND NOT reverse;
FwdAut := forward;
RevAut := reverse;
fwdCommand := FwdCtrl;
revCommand := RevCtrl;
FwdFbkCalc := simulate OR NOT hasFwdFeedback;
RevFbkCalc := simulate OR NOT hasRevFeedback;
DelayTimer1(IN:= FwdFbkCalc AND fwdCommand, PT:= REAL_TO_TIME(simulateDelay * 1000));
fwdFbkSimulated := DelayTimer1.Q;
DelayTimer2(IN:= RevFbkCalc AND revCommand, PT:= REAL_TO_TIME(simulateDelay * 1000));
revFbkSimulated := DelayTimer2.Q;
FwdFbk := (forwardFeedback AND NOT FwdFbkCalc) OR (fwdFbkSimulated AND FwdFbkCalc);
RevFbk := (reverseFeedback AND NOT RevFbkCalc) OR (revFbkSimulated AND RevFbkCalc);
Trip := NOT driveTrip;
ResetAut := reset;
MonSafePos := safeHold;
MonStatTi := staticTimeout;
MonDynTi := dynamicTimeout;
reset := False;

                ]]>
            </xhtml>
        </ST>
    </body>
    <addData>
        <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_INIT" ObjectId="8568aabb-efd1-4e11-b093-9ebdb5b0ac2b">
                <interface>
                    <returnType><BOOL /></returnType>
                    <inputVars>
                        <variable name="bInitRetains">
                            <type><BOOL /></type>
                            <documentation><xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml></documentation>
                        </variable>
                        <variable name="bInCopyCode">
                            <type><BOOL /></type>
                            <documentation><xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change)   </xhtml></documentation>
                        </variable>
                    </inputVars>
                    <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
FB_Init is always available implicitly and it is used primarily for initialization.
                        </xhtml>
                    </documentation>
                </interface>
                <body>
                    <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
// assign default values on initialization
THIS^.hasFwdFeedback := True;
THIS^.hasRevFeedback := True;
THIS^.enableForward := True;
THIS^.enableReverse := False;
THIS^.monitor := True;
THIS^.staticTimeout := 2;
THIS^.dynamicTimeout := 5;
THIS^.simulateDelay := 1;
THIS^.permitIn := 1;


                        </xhtml>
                    </ST>
                </body>
            </Method>
        </data>
    </addData>
</pou>