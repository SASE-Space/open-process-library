<pou name="DigitalMeasurement" pouType="functionBlock">
    <interface>
        <inOutVars>
            <variable name="MTPBase"><type><derived name="FB_MTP_BinMon" /></type></variable>
        </inOutVars>
        <inputVars>
            <variable name="id"><type><INT /></type></variable>
            <variable name="value"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="valueOut"><type><BOOL /></type></variable>
            <variable name="risingEdge"><type><BOOL /></type></variable>
            <variable name="fallingEdge"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="first_scan"><type><BOOL /></type><initialValue><simpleValue value="TRUE" /></initialValue></variable>
            <variable name="second_scan"><type><BOOL /></type></variable>
            <variable name="lastValue"><type><BOOL /></type></variable><!-- Temporary variables for MTP base interface access -->
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="V"><type><BOOL /></type></variable>
            <variable name="VState0"><type><derived name="string" /></type></variable>
            <variable name="VState1"><type><derived name="string" /></type></variable>
            <variable name="OSLevel"><type><BYTE /></type></variable>
            <variable name="VFlutEn"><type><BOOL /></type></variable>
            <!-- Helper variables for sync detection -->
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
                <![CDATA[

// STARTUP - SECOND SCAN
IF second_scan THEN    
    // end second scan
    second_scan := FALSE;
END_IF;

// STARTUP - FIRST SCAN
IF first_scan THEN
    // prepare second scan
    first_scan := FALSE;
    second_scan := TRUE;
END_IF;

// sync variables with MTPBase
// - a variable on MTPBase that can be changed from the HMI
// - an input on the wrapper block
// how: store the variable from the MTPBase on a helper variable, and then compare each cycle if the operator has changed it
// if yes then copy it to the input on the wrapper block
// if not then copy the wrapper block input to the MTPBase variable

// copy from and to the MTPBase
// there is no need to execute the MTPBase block here because it gets executed as part of the auto-generated MTP code
    MTPBase.WQC := WQC;
    MTPBase.V := V;
    MTPBase.VState0 := VState0;
    MTPBase.VState1 := VState1;
    MTPBase.OSLevel := OSLevel;
    MTPBase.VFlutEn := VFlutEn;



// Functionality

WQC := 16#FF;
OSLevel := 16#00;
V := value;
VState0 := 'False';
VState1 := 'True';
VFlutEn := False;
risingEdge := value <> lastValue and value = True;
fallingEdge := value <> lastValue and value = False;
lastValue := value;

                ]]>
            </xhtml>
        </ST>
    </body>
    <addData>
        <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_INIT" ObjectId="8568aabb-efd1-4e11-b093-9ebdb5b0ac2b">
                <interface>
                    <returnType><BOOL /></returnType>
                    <inputVars>
                        <variable name="bInitRetains">
                            <type><BOOL /></type>
                            <documentation><xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml></documentation>
                        </variable>
                        <variable name="bInCopyCode">
                            <type><BOOL /></type>
                            <documentation><xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change)   </xhtml></documentation>
                        </variable>
                    </inputVars>
                    <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
FB_Init is always available implicitly and it is used primarily for initialization.
                        </xhtml>
                    </documentation>
                </interface>
                <body>
                    <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
// assign default values on initialization


                        </xhtml>
                    </ST>
                </body>
            </Method>
        </data>
    </addData>
</pou>