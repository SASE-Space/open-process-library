<pou name="SolenoidValve" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="id">
                <type>
                    <INT />
                </type>
            </variable>
            <variable name="open">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="close">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="feedbackOpen">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="feedbackClose">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="hasFbOpen">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="hasFbClose">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="safeOpen">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="safeHold">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="monitor">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="simulate">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="simulateDelay">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="interlockIn">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="permitIn">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="protectIn">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="reset">
                <type>
                    <BOOL />
                </type>
            </variable>
        </inputVars>
        <outputVars>
            <variable name="remote">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="operator">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="automatic">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="offline">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="error">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="opened">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="closed">
                <type>
                    <BOOL />
                </type>
            </variable>
        </outputVars>
        <localVars>
            <variable name="fbOpenSimulated">
                <type>
                    <BOOL />
                </type>
            </variable>
            <variable name="fbCloseSimulated">
                <type>
                    <BOOL />
                </type>
            </variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
WQC := 16#FF;
OSLevel := TODO;
remote := StateChannel;
operator := StateOpAct;
automatic := StateAutAct;
offline := StateOffAct;
PermEn := True;
IntlEn := True;
ProtEn := True;
Permit := permitIn;
Interlock := interlockIn;
SafePos := safeOpen;
MonSafePos := safeOpen;
SafePosEn := safeHold;
OpenAut := open;
CloseAut := close;
OpenFbkCalc := simulation OR NOT feedbackOpen;
CloseFbkCalc := simulation OR NOT feedbackClose;
fbOpenSimulated := (simulate OR NOT hasFbOpen) AND Ctrl for simulateDelay;
fbCloseSimulated := (simulate OR NOT hasFbClose) AND NOT Ctrl for simulateDelay;
OpenFbk := feedbackOpen OR fbOpenSimulated;
CloseFbk := feedbackClose OR fbCloseSimulated;
opened := Ctrl AND OpenFbk;
closed := NOT Ctrl AND CloseFbk;
ResetAut := reset;
MonEn := monitor;
reset := False;
            </xhtml>
        </ST>
    </body>
</pou> 