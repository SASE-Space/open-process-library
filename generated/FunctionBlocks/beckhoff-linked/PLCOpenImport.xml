<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
    <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.20.50" creationDateTime="2025-07-01T11:02:16.1300929" />
    <contentHeader name="testproj" modificationDateTime="2025-07-01T11:02:16.1300929">
        <coordinateInfo>
        <fbd>
            <scaling x="1" y="1" />
        </fbd>
        <ld>
            <scaling x="1" y="1" />
        </ld>
        <sfc>
            <scaling x="1" y="1" />
        </sfc>
        </coordinateInfo>
        <addData>
        <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
            <ProjectInformation />
        </data>
        </addData>
    </contentHeader>
    <types>
        <dataTypes />
        <pous />
    </types>
    <instances>
        <configurations />
    </instances>
    <addData>
        <data name="http://www.3s-software.com/plcopenxml/application" handleUnknown="implementation">
        <resource name="testproj">
            <addData>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
<pou name="AnaMon" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="OSLevel"><type><BYTE /></type></variable>
            <variable name="V"><type><REAL /></type></variable>
            <variable name="VSclMin"><type><REAL /></type></variable>
            <variable name="VSclMax"><type><REAL /></type></variable>
            <variable name="VUnit"><type><INT /></type></variable>
            <variable name="VAHEn"><type><BOOL /></type></variable>
            <variable name="VWHEn"><type><BOOL /></type></variable>
            <variable name="VTHEn"><type><BOOL /></type></variable>
            <variable name="VTLEn"><type><BOOL /></type></variable>
            <variable name="VWLEn"><type><BOOL /></type></variable>
            <variable name="VALEn"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="VAHAct"><type><BOOL /></type></variable>
            <variable name="VWHAct"><type><BOOL /></type></variable>
            <variable name="VTHAct"><type><BOOL /></type></variable>
            <variable name="VTLAct"><type><BOOL /></type></variable>
            <variable name="VWLAct"><type><BOOL /></type></variable>
            <variable name="VALAct"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="VAHLim"><type><REAL /></type></variable>
            <variable name="VWHLim"><type><REAL /></type></variable>
            <variable name="VTHLim"><type><REAL /></type></variable>
            <variable name="VTLLim"><type><REAL /></type></variable>
            <variable name="VWLLim"><type><REAL /></type></variable>
            <variable name="VALLim"><type><REAL /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
VAHAct := vOut >= alarmHigh;
VWHAct := vOut >= warningHigh;
VTHAct := vOut >= toleranceHigh;
VTLAct := vOut <= toleranceLow;
VWLAct := vOut <= warningLow;
VALAct := vOut <= alarmLow;
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="BinMon" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="wQC"><type><BYTE /></type></variable>
            <variable name="vState0"><type><STRING /></type></variable>
            <variable name="vState1"><type><STRING /></type></variable>
            <variable name="oSLevel"><type><BYTE /></type></variable>
            <variable name="vFlutEn"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="vFlutAct"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="vFlutCnt"><type><INT /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="LockView4" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="wQC"><type><BYTE /></type></variable>
            <variable name="logic"><type><BOOL /></type></variable>
            <variable name="in1En"><type><BOOL /></type></variable>
            <variable name="in1"><type><BOOL /></type></variable>
            <variable name="in1QC"><type><BYTE /></type></variable>
            <variable name="in1Inv"><type><BOOL /></type></variable>
            <variable name="in1Txt"><type><STRING /></type></variable>
            <variable name="in2En"><type><BOOL /></type></variable>
            <variable name="in2"><type><BOOL /></type></variable>
            <variable name="in2QC"><type><BYTE /></type></variable>
            <variable name="in2Inv"><type><BOOL /></type></variable>
            <variable name="in2Txt"><type><STRING /></type></variable>
            <variable name="in3En"><type><BOOL /></type></variable>
            <variable name="in3"><type><BOOL /></type></variable>
            <variable name="in3QC"><type><BYTE /></type></variable>
            <variable name="in3Inv"><type><BOOL /></type></variable>
            <variable name="in3Txt"><type><STRING /></type></variable>
            <variable name="in4En"><type><BOOL /></type></variable>
            <variable name="in4"><type><BOOL /></type></variable>
            <variable name="in4QC"><type><BYTE /></type></variable>
            <variable name="in4Inv"><type><BOOL /></type></variable>
            <variable name="in4Txt"><type><STRING /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="out"><type><BOOL /></type></variable>
            <variable name="outQC"><type><STRING /></type></variable>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="MonAnaDrv" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="MonAnaVlv" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="MonBinDrv" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="stateChannel"><type><BOOL /></type></variable>
            <variable name="stateOffAut"><type><BOOL /></type></variable>
            <variable name="stateOpAut"><type><BOOL /></type></variable>
            <variable name="stateAutAut"><type><BOOL /></type></variable>
            <variable name="permit"><type><BOOL /></type></variable>
            <variable name="intlEn"><type><BOOL /></type></variable>
            <variable name="interlock"><type><BOOL /></type></variable>
            <variable name="protEn"><type><BOOL /></type></variable>
            <variable name="protect"><type><BOOL /></type></variable>
            <variable name="wQC"><type><BYTE /></type></variable>
            <variable name="oSLevel"><type><BYTE /></type></variable>
            <variable name="safePos"><type><BOOL /></type></variable>
            <variable name="fwdEn"><type><BOOL /></type></variable>
            <variable name="revEn"><type><BOOL /></type></variable>
            <variable name="stopAut"><type><BOOL /></type></variable>
            <variable name="fwdAut"><type><BOOL /></type></variable>
            <variable name="revAut"><type><BOOL /></type></variable>
            <variable name="revFbkCalc"><type><BOOL /></type></variable>
            <variable name="revFbk"><type><BOOL /></type></variable>
            <variable name="fwdFbkCalc"><type><BOOL /></type></variable>
            <variable name="fwdFbk"><type><BOOL /></type></variable>
            <variable name="trip"><type><BOOL /></type></variable>
            <variable name="resetAut"><type><BOOL /></type></variable>
            <variable name="monSafePos"><type><BOOL /></type></variable>
            <variable name="monStatTi"><type><REAL /></type></variable>
            <variable name="monDynTi"><type><REAL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="stateOpAct"><type><BOOL /></type></variable>
            <variable name="stateAutAct"><type><BOOL /></type></variable>
            <variable name="stateOffAct"><type><BOOL /></type></variable>
            <variable name="safePosAct"><type><BOOL /></type></variable>
            <variable name="fwdCtrl"><type><BOOL /></type></variable>
            <variable name="revCtrl"><type><BOOL /></type></variable>
            <variable name="monStatErr"><type><BOOL /></type></variable>
            <variable name="monDynErr"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="stateOffOp"><type><BOOL /></type></variable>
            <variable name="stateOpOp"><type><BOOL /></type></variable>
            <variable name="stateAutOp"><type><BOOL /></type></variable>
            <variable name="stopOp"><type><BOOL /></type></variable>
            <variable name="fwdOp"><type><BOOL /></type></variable>
            <variable name="revOp"><type><BOOL /></type></variable>
            <variable name="resetOp"><type><BOOL /></type></variable>
            <variable name="monEn"><type><BOOL /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="MonBinVlv" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="StateChannel"><type><BOOL /></type></variable>
            <variable name="StateOffAut"><type><BOOL /></type></variable>
            <variable name="StateOpAut"><type><BOOL /></type></variable>
            <variable name="StateAutAut"><type><BOOL /></type></variable>
            <variable name="PermEn"><type><BOOL /></type></variable>
            <variable name="IntlEn"><type><BOOL /></type></variable>
            <variable name="ProtEn"><type><BOOL /></type></variable>
            <variable name="Permit"><type><BOOL /></type></variable>
            <variable name="Interlock"><type><BOOL /></type></variable>
            <variable name="Protect"><type><BOOL /></type></variable>
            <variable name="WQC"><type><BYTE /></type></variable>
            <variable name="SafePos"><type><BOOL /></type></variable>
            <variable name="OpenAut"><type><BOOL /></type></variable>
            <variable name="CloseAut"><type><BOOL /></type></variable>
            <variable name="OpenFbkCalc"><type><BOOL /></type></variable>
            <variable name="CloseFbkCalc"><type><BOOL /></type></variable>
            <variable name="OpenFbk"><type><BOOL /></type></variable>
            <variable name="CloseFbk"><type><BOOL /></type></variable>
            <variable name="MonSafePos"><type><BOOL /></type></variable>
            <variable name="MonStatTi"><type><REAL /></type></variable>
            <variable name="MonDynTi"><type><REAL /></type></variable>
            <variable name="ResetAut"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="StateOpAct"><type><BOOL /></type></variable>
            <variable name="StateAutAct"><type><BOOL /></type></variable>
            <variable name="StateOffAct"><type><BOOL /></type></variable>
            <variable name="SafePosAct"><type><BOOL /></type></variable>
            <variable name="Ctrl"><type><BOOL /></type></variable>
            <variable name="MonStatErr"><type><BOOL /></type></variable>
            <variable name="MonDynErr"><type><BOOL /></type></variable>
            <variable name="OperationMode"><type><INT /></type></variable>
        </outputVars>
        <localVars>
            <variable name="StateOffOp"><type><BOOL /></type></variable>
            <variable name="StateOpOp"><type><BOOL /></type></variable>
            <variable name="StateAutOp"><type><BOOL /></type></variable>
            <variable name="OpenOp"><type><BOOL /></type></variable>
            <variable name="CloseOp"><type><BOOL /></type></variable>
            <variable name="ResetOp"><type><BOOL /></type></variable>
            <variable name="MonEn"><type><BOOL /></type></variable>
            <variable name="OpenedState"><type><BOOL /></type></variable>
            <variable name="ClosedState"><type><BOOL /></type></variable>
            <variable name="DelayTimer1"><type><derived name="TON" /></type></variable>
            <variable name="DelayTimer2"><type><derived name="TON" /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
    
// State Machine for the OperationMode
CASE OperationMode OF
    0: // Offline
        IF (StateOpAut AND StateChannel) OR (StateOpOp AND NOT StateChannel) THEN
            OperationMode := 1;
        END_IF;
    1: // Operator
        IF (StateOffAut AND StateChannel) OR (StateOffOp AND NOT StateChannel) THEN
            OperationMode := 0;
        END_IF;
        IF (StateAutAut AND StateChannel) OR (StateAutOp AND NOT StateChannel) THEN
            OperationMode := 2;
        END_IF;
    2: // Automatic
        IF (StateOpAut AND StateChannel) OR (StateOpOp AND NOT StateChannel) THEN
            OperationMode := 1;
        END_IF;
END_CASE;
    
// Make boolean indicators for the OperationMode State
StateOpAct := OperationMode = 1;
StateAutAct := OperationMode = 2;
StateOffAct := OperationMode = 0;
    
// 'Protect' is for interlocks that need to be reset
IF (ResetAut AND StateChannel) OR (ResetOp AND NOT StateChannel) THEN
    Protect := FALSE;
END_IF;
    
// signal indicating that the valve needs to go to the safe position
SafePosAct := (PermEn AND NOT Permit) OR (IntlEn AND NOT Interlock) OR (ProtEn AND NOT Protect) OR (MonEn AND (MonStatErr OR MonDynErr));
    
// control signal to the hardware
IF (SafePosAct AND SafePos AND NOT SafePosEn) OR (NOT SafePosAct AND ((OpenAut AND StateAutAct) OR (OpenOp and StateOpAct))) THEN
    Ctrl := TRUE;
END_IF;
IF (SafePosAct AND NOT SafePos NOT SafePosEn) OR (NOT SafePosAct AND ((CloseAut AND StateAutAct) OR (CloseOp and StateOpAct))) THEN
    Ctrl := FALSE;
END_IF;
    
// Opened and Closed States
IF Ctrl AND OpenFbk THEN
    OpenedState := TRUE;
END_IF;
IF NOT Ctrl THEN
    OpenedState := FALSE;
END_IF;
IF NOT Ctrl AND CloseFbk THEN
    ClosedState := TRUE;
END_IF;
IF Ctrl THEN
    ClosedState := FALSE;
END_IF;
    
// Static and Dynamic Monitoring
DelayTimer1(IN:= (MonEn AND OpenedState AND NOT OpenFbk) OR ( MonEn AND ClosedState AND NOT CloseFbk), PT:= REAL_TO_TIME(MonStatTi * 1000));
IF DelayTimer1.Q THEN
    MonStatErr := TRUE;
END_IF;
IF (ResetAut AND StateChannel) OR (ResetOp AND NOT StateChannel) THEN
    MonStatErr := FALSE;
END_IF;
DelayTimer2(IN:= MonEn AND ((Ctrl AND NOT OpenFbk) OR (NOT Ctrl AND NOT ClsFbk)), PT:= REAL_TO_TIME(MonDynTi * 1000));
IF DelayTimer2.Q THEN
    MonDynErr := TRUE;
END_IF;
IF (ResetAut AND StateChannel) OR (ResetOp AND NOT StateChannel) THEN
    MonDynErr := FALSE;
END_IF;
    
// reset operator command
StateOffOp := False;
StateOpOp := False;
StateAutOp := False;
OpenOp := False;
CloseOp := False;
ResetOp := False;
    
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="PIDCtrl" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="AnalogInput" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="rawValue"><type><WORD /></type></variable>
            <variable name="valueUnit"><type><INT /></type></variable>
            <variable name="scaleMin"><type><REAL /></type></variable>
            <variable name="scaleMax"><type><REAL /></type></variable>
            <variable name="alarmHigh"><type><REAL /></type></variable>
            <variable name="warningHigh"><type><REAL /></type></variable>
            <variable name="toleranceHigh"><type><REAL /></type></variable>
            <variable name="toleranceLow"><type><REAL /></type></variable>
            <variable name="warningLow"><type><REAL /></type></variable>
            <variable name="alarmLow"><type><REAL /></type></variable>
            <variable name="alarmHighEn"><type><BOOL /></type></variable>
            <variable name="warningHighEn"><type><BOOL /></type></variable>
            <variable name="toleranceHighEn"><type><BOOL /></type></variable>
            <variable name="toleranceLowEn"><type><BOOL /></type></variable>
            <variable name="warningLowEn"><type><BOOL /></type></variable>
            <variable name="alarmLowEn"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="alarmHighAct"><type><REAL /></type></variable>
            <variable name="warningHighAct"><type><REAL /></type></variable>
            <variable name="toleranceHighAct"><type><REAL /></type></variable>
            <variable name="toleranceLowAct"><type><REAL /></type></variable>
            <variable name="warningLowAct"><type><REAL /></type></variable>
            <variable name="alarmLowAct"><type><REAL /></type></variable>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
WQC := 16#FF;
OSLevel := TODO;
V := scaleMin + (REAL(RawInput) / 27648.0) * (scaleMax - scaleMin);
vOut := V;
VSclMin := scaleMin;
VSclMax := scaleMax;
VUnit := valueUnit;
alarmHigh := VAHLim;
warningHigh := VWHLim;
toleranceHigh := VTHLim;
toleranceLow := VTLLim;
warningLow := VWLLim;
alarmLow := VALLim;
VAHEn := alarmHighEn;
VWHEn := warningHighEn;
VTHEn := toleranceHighEn;
VTLEn := toleranceLowEn;
VWLEn := warningLowEn;
VALEn := alarmLowEn;
    
    
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="AnalogValve" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="DigitalInput" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="Interlock4" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="PIDController" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="ReversingMotor" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="SolenoidValve" pouType="functionBlock">
    <interface>
        <inputVars>
            <variable name="id"><type><INT /></type></variable>
            <variable name="open"><type><BOOL /></type></variable>
            <variable name="close"><type><BOOL /></type></variable>
            <variable name="feedbackOpen"><type><BOOL /></type></variable>
            <variable name="feedbackClose"><type><BOOL /></type></variable>
            <variable name="hasFbOpen"><type><BOOL /></type></variable>
            <variable name="hasFbClose"><type><BOOL /></type></variable>
            <variable name="safeOpen"><type><BOOL /></type></variable>
            <variable name="safeHold"><type><BOOL /></type></variable>
            <variable name="monitor"><type><BOOL /></type></variable>
            <variable name="simulate"><type><BOOL /></type></variable>
            <variable name="simulateDelay"><type><BOOL /></type></variable>
            <variable name="interlockIn"><type><BOOL /></type></variable>
            <variable name="permitIn"><type><BOOL /></type></variable>
            <variable name="protectIn"><type><BOOL /></type></variable>
            <variable name="reset"><type><BOOL /></type></variable>
        </inputVars>
        <outputVars>
            <variable name="remote"><type><BOOL /></type></variable>
            <variable name="operator"><type><BOOL /></type></variable>
            <variable name="automatic"><type><BOOL /></type></variable>
            <variable name="offline"><type><BOOL /></type></variable>
            <variable name="error"><type><BOOL /></type></variable>
            <variable name="opened"><type><BOOL /></type></variable>
            <variable name="closed"><type><BOOL /></type></variable>
        </outputVars>
        <localVars>
            <variable name="fbOpenSimulated"><type><BOOL /></type></variable>
            <variable name="fbCloseSimulated"><type><BOOL /></type></variable>
            <variable name="DelayTimer1"><type><derived name="TON" /></type></variable>
            <variable name="DelayTimer2"><type><derived name="TON" /></type></variable>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
WQC := 16#FF;
OSLevel := TODO;
remote := StateChannel;
operator := StateOpAct;
automatic := StateAutAct;
offline := StateOffAct;
PermEn := True;
IntlEn := True;
ProtEn := True;
Permit := permitIn;
Interlock := interlockIn;
IF protectIn THEN
    Protect := TRUE;
END_IF;
SafePos := safeOpen;
MonSafePos := safeOpen;
SafePosEn := safeHold;
OpenAut := open;
CloseAut := close;
OpenFbkCalc := simulation OR NOT feedbackOpen;
CloseFbkCalc := simulation OR NOT feedbackClose;
DelayTimer1(IN:= (simulate OR NOT hasFbOpen) AND Ctrl, PT:= REAL_TO_TIME(simulateDelay * 1000));
fbOpenSimulated := DelayTimer1.Q;
DelayTimer2(IN:= (simulate OR NOT hasFbClose) AND NOT Ctrl, PT:= REAL_TO_TIME(simulateDelay * 1000));
fbCloseSimulated := DelayTimer2.Q;
OpenFbk := feedbackOpen OR fbOpenSimulated;
CloseFbk := feedbackClose OR fbCloseSimulated;
opened := Ctrl AND OpenFbk;
closed := NOT Ctrl AND CloseFbk;
ResetAut := reset;
MonEn := monitor;
reset := False;
]]></xhtml>
        </ST>
    </body>
</pou>
<pou name="VFD" pouType="functionBlock">
    <interface>
        <inputVars>
        </inputVars>
        <outputVars>
        </outputVars>
        <localVars>
        </localVars>
    </interface>
    <body>
        <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
]]></xhtml>
        </ST>
    </body>
</pou></data>
            </addData>
        </resource>
        </data>
        <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
            <ProjectStructure>
                <Object Name="project_name_does_not_matter">
                    <Folder Name="OpenProcessLibrary">
                        <Folder Name="POUs">
                            <Folder Name="MTP">
                                <Object Name="AnaMon" />
                                <Object Name="BinMon" />
                                <Object Name="LockView4" />
                                <Object Name="MonAnaDrv" />
                                <Object Name="MonAnaVlv" />
                                <Object Name="MonBinDrv" />
                                <Object Name="MonBinVlv" />
                                <Object Name="PIDCtrl" />
                            </Folder>
                            <Folder Name="Library">
                                <Object Name="AnalogInput" />
                                <Object Name="AnalogValve" />
                                <Object Name="DigitalInput" />
                                <Object Name="Interlock4" />
                                <Object Name="PIDController" />
                                <Object Name="ReversingMotor" />
                                <Object Name="SolenoidValve" />
                                <Object Name="VFD" />
                            </Folder>
                        </Folder>
                    </Folder>
                </Object>
            </ProjectStructure>
        </data>
    </addData>
</project>